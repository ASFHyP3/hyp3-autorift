[build-system]
requires = ["setuptools>=61.0", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "hyp3_autorift"
requires-python = ">=3.10"
authors = [
    {name="ASF APD/Tools Team", email="uaf-asf-apd@alaska.edu"},
]
description = "A HyP3 plugin for feature tracking processing with AutoRIFT-ISCE"
readme = "README.md"
license = {text = "BSD-3-Clause"}
classifiers=[
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    # NOTE: Duplicated in "[tool.pixi.dependencies]" to prefer conda-forge dependencies.
    #       see: https://pixi.sh/dev/python/pyproject_toml/#dependency-section
    'boto3',
    'botocore',
    'burst2safe>=1.4.4',
    'gdal>=3',
    'h5netcdf',  # for increased performance of crop.py
    'hyp3lib>=4,<5',
    'matplotlib',
    'netCDF4',
    'numpy>=1.20',
    'pandas>=1.4',
    'pyproj>=3.3',
    'requests>=2.0',
    'scipy>=1.0',
    'xarray',
]
dynamic = ["version"]

[project.optional-dependencies]
develop = [
    'setuptools_scm',
    'pillow>=7.0',
    'pytest',
    'pytest-console-scripts',
    'pytest-cov',
    'responses',
    'ruff==0.11.12',
    'mypy==1.16.0',
    'types-requests',
]

[project.scripts]
hyp3_autorift = "hyp3_autorift.process:main"
crop_netcdf_product = "hyp3_autorift.crop:main"

[project.urls]
Homepage = "https://github.com/ASFHyP3/hyp3-autorift"
"Bug Tracker" = "https://github.com/ASFHyP3/hyp3-autorift/issues"
Documentation = "https://hyp3-docs.asf.alaska.edu"

[tool.setuptools]
include-package-data = true
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]

[tool.ruff]
exclude = ["vend"]
line-length = 120
# The directories to consider when resolving first- vs. third-party imports.
# See: https://docs.astral.sh/ruff/settings/#src
src = ["src", "tests"]

[tool.ruff.format]
indent-style = "space"
quote-style = "single"

[tool.ruff.lint]
extend-select = [
    "NPY", # numpy-specific rules: https://docs.astral.sh/ruff/rules/#numpy-specific-rules-npy
    "I",   # isort: https://docs.astral.sh/ruff/rules/#isort-i
    # TODO: Uncomment the following extensions and address their warnings:
    # "UP",  # pyupgrade: https://docs.astral.sh/ruff/rules/#pyupgrade-up
    # "D",   # pydocstyle: https://docs.astral.sh/ruff/rules/#pydocstyle-d
    # "ANN", # annotations: https://docs.astral.sh/ruff/rules/#flake8-annotations-ann
    # "PTH", # use-pathlib-pth: https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
case-sensitive = true
lines-after-imports = 2

[tool.ruff.lint.flake8-annotations]
suppress-dummy-args = true

[tool.ruff.lint.extend-per-file-ignores]
"tests/*" = ["D1", "ANN"]

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = true
check_untyped_defs = true
install_types = true
non_interactive = true
pretty = true
disable_error_code = ["import-untyped"]
exclude = ["/vend/"]

[[tool.mypy.overrides]]
module = "hyp3_autorift.vend.*"
follow_imports = "skip"

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["linux-64", "linux-aarch64", "osx-64", "osx-arm64"]

[tool.pixi.pypi-options]
no-build-isolation = [
    'isce3',
]

[tool.pixi.dependencies]
pip = "*"
boto3 = "*"
botocore = "*"
burst2safe = ">=1.4.4"
gdal = ">=3"
h5netcdf = "*"
hyp3lib = ">=4,<5"
libgdal-netcdf = "*"
libgdal-jp2openjpeg = "*"
matplotlib-base = "*"
netcdf4 = "*"
numpy = "==1.26.0"
opencv = "*"
pandas = ">=1.4"
pyproj = ">=3.3"
requests = ">=2.0"
scipy = ">=1.0"
xarray = "*"
# For building radar deps
cxx-compiler = "*"
gfortran = "*"
eigen = "*"
numba = "*"
scikit-image = "*"
pkgconfig = "*"
gtest = "*"
fftw = "*"
pybind11 = "*"
ruamel = "*"
"ruamel.yaml" = "*"
yamale = "*"
backoff = "*"
pysolid = "*"
pixi-pycharm = ">=0.0.8,<0.0.9"

[tool.pixi.target.linux-64.dependencies]
pyre = "*"

[tool.pixi.target.linux-aarch64.pypi-dependencies]
pyre = "*"

[tool.pixi.target.osx-64.dependencies]
pyre = "*"

[tool.pixi.target.osx-arm64.dependencies]
pyre = "*"

[tool.pixi.pypi-dependencies]
snaphu = "*"
raider = {git = "https://github.com/dbekaert/RAiDER.git", rev = "v0.5.5" }

[tool.pixi.feature.pycharm.dependencies]
pixi-pycharm = "*"

[tool.pixi.feature.py310.dependencies]
python = "3.10.*"

[tool.pixi.feature.py311.dependencies]
python = "3.11.*"

[tool.pixi.feature.py312.dependencies]
python = "3.12.*"

[tool.pixi.environments]
default = { features = ["develop", "pycharm"], solve-group = "default" }
py310 = { features = ["develop", "py310"]}
py311 = { features = ["develop", "py311"]}
py312 = { features = ["develop", "py312"], solve-group = "default"}


[tool.pixi.tasks.install-isce3]
cmd = [
    "python",
    "-m",
    "pip",
    "install",
    "git+https://github.com/isce-framework/isce3.git@6116cdaca709c861839804567cca406667887d8b",
]
depends-on = []

[tool.pixi.tasks.install-radar]
cmd = [
    "python",
    "-m",
    "pip",
    "install",
    "git+https://github.com/opera-adt/COMPASS.git@v0.5.6",
    "git+https://github.com/isce-framework/s1-reader.git@v0.2.5",
]
depends-on = ["install-isce3"]

[tool.pixi.tasks.install-autorift]
cmd = [
    "python",
    "-m",
    "pip",
    "install",
    "git+https://github.com/nasa-jpl/autoRIFT.git@v2.0.0",
]
depends-on = ["install-radar"]


[tool.pixi.tasks.install-editable]
cmd = [
    "python",
    "-m",
    "pip",
    "install",
    "-e",
    ".",
]
depends-on = ["install-autorift"]

[tool.pixi.tasks.tests]
cmd = [
    "pytest",
    "--cov=hyp3_autorift",
]
depends-on = ["install-editable"]

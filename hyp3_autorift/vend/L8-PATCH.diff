diff --git atestautoRIFT.py btestautoRIFT.py
--- atestautoRIFT.py
+++ btestautoRIFT.py
@@ -863,10 +863,33 @@ def generateAutoriftProduct(indir_m, indir_s, grid_location, init_offset, search
                         date_ct = d0 + (d1 - d0)/2
                         date_center = date_ct.strftime("%Y%m%d")

-                    master_dt = master_split[3][0:8] + master_time.strftime("T%H:%M:%S")
-                    slave_dt = slave_split[3][0:8] + slave_time.strftime("T%H:%M:%S")
-
-                    IMG_INFO_DICT = {'mission_img1':master_split[0][0],'sensor_img1':master_split[0][1],'satellite_img1':np.float64(master_split[0][2:4]),'correction_level_img1':master_split[1],'path_img1':np.float64(master_split[2][0:3]),'row_img1':np.float64(master_split[2][3:6]),'acquisition_date_img1':master_dt,'time_standard_img1':'UTC','processing_date_img1':master_split[4][0:8],'collection_number_img1':np.float64(master_split[5]),'collection_category_img1':master_split[6],'mission_img2':slave_split[0][0],'sensor_img2':slave_split[0][1],'satellite_img2':np.float64(slave_split[0][2:4]),'correction_level_img2':slave_split[1],'path_img2':np.float64(slave_split[2][0:3]),'row_img2':np.float64(slave_split[2][3:6]),'acquisition_date_img2':slave_dt,'time_standard_img2':'UTC','processing_date_img2':slave_split[4][0:8],'collection_number_img2':np.float64(slave_split[5]),'collection_category_img2':slave_split[6],'date_dt':date_dt,'date_center':date_center,'latitude':cen_lat,'longitude':cen_lon,'roi_valid_percentage':PPP,'autoRIFT_software_version':version}
+                    from datetime import datetime
+                    master_dt = datetime.strptime(kwargs['reference_metadata']['properties']['datetime'], '%Y-%m-%dT%H:%M:%S.%fZ')
+                    slave_dt = datetime.strptime(kwargs['secondary_metadata']['properties']['datetime'], '%Y-%m-%dT%H:%M:%S.%fZ')
+
+                    IMG_INFO_DICT = {'mission_img1': master_split[0][0], 'sensor_img1': master_split[0][1],
+                                     'satellite_img1': np.float64(master_split[0][2:4]),
+                                     'correction_level_img1': master_split[1],
+                                     'path_img1': np.float64(master_split[2][0:3]),
+                                     'row_img1': np.float64(master_split[2][3:6]),
+                                     'acquisition_date_img1': master_dt.strftime('%Y%m%dT%H:%M:%S'),
+                                     'time_standard_img1': 'UTC',
+                                     'processing_date_img1': master_split[4][0:8],
+                                     'collection_number_img1': np.float64(master_split[5]),
+                                     'collection_category_img1': master_split[6],
+                                     'mission_img2': slave_split[0][0],
+                                     'sensor_img2': slave_split[0][1],
+                                     'satellite_img2': np.float64(slave_split[0][2:4]),
+                                     'correction_level_img2': slave_split[1],
+                                     'path_img2': np.float64(slave_split[2][0:3]),
+                                     'row_img2': np.float64(slave_split[2][3:6]),
+                                     'acquisition_date_img2': slave_dt.strftime('%Y%m%dT%H:%M:%S'),
+                                     'time_standard_img2': 'UTC',
+                                     'processing_date_img2': slave_split[4][0:8],
+                                     'collection_number_img2': np.float64(slave_split[5]),
+                                     'collection_category_img2': slave_split[6], 'date_dt': date_dt,
+                                     'date_center': date_center, 'latitude': cen_lat, 'longitude': cen_lon,
+                                     'roi_valid_percentage': PPP, 'autoRIFT_software_version': version}

                     error_vector = np.array([25.5,25.5])

diff --git atestautoRIFT_ISCE.py btestautoRIFT_ISCE.py
index 5e62ad4..60de87d 100755
--- atestautoRIFT_ISCE.py
+++ btestautoRIFT_ISCE.py
@@ -862,10 +862,33 @@ def generateAutoriftProduct(indir_m, indir_s, grid_location, init_offset, search
                         date_ct = d0 + (d1 - d0)/2
                         date_center = date_ct.strftime("%Y%m%d")

-                    master_dt = master_split[3][0:8] + master_time.strftime("T%H:%M:%S")
-                    slave_dt = slave_split[3][0:8] + slave_time.strftime("T%H:%M:%S")
-
-                    IMG_INFO_DICT = {'mission_img1':master_split[0][0],'sensor_img1':master_split[0][1],'satellite_img1':np.float64(master_split[0][2:4]),'correction_level_img1':master_split[1],'path_img1':np.float64(master_split[2][0:3]),'row_img1':np.float64(master_split[2][3:6]),'acquisition_date_img1':master_dt,'time_standard_img1':'UTC','processing_date_img1':master_split[4][0:8],'collection_number_img1':np.float64(master_split[5]),'collection_category_img1':master_split[6],'mission_img2':slave_split[0][0],'sensor_img2':slave_split[0][1],'satellite_img2':np.float64(slave_split[0][2:4]),'correction_level_img2':slave_split[1],'path_img2':np.float64(slave_split[2][0:3]),'row_img2':np.float64(slave_split[2][3:6]),'acquisition_date_img2':slave_dt,'time_standard_img2':'UTC','processing_date_img2':slave_split[4][0:8],'collection_number_img2':np.float64(slave_split[5]),'collection_category_img2':slave_split[6],'date_dt':date_dt,'date_center':date_center,'latitude':cen_lat,'longitude':cen_lon,'roi_valid_percentage':PPP,'autoRIFT_software_version':version}
+                    from datetime import datetime
+                    master_dt = datetime.strptime(kwargs['reference_metadata']['properties']['datetime'], '%Y-%m-%dT%H:%M:%S.%fZ')
+                    slave_dt = datetime.strptime(kwargs['secondary_metadata']['properties']['datetime'], '%Y-%m-%dT%H:%M:%S.%fZ')
+
+                    IMG_INFO_DICT = {'mission_img1': master_split[0][0], 'sensor_img1': master_split[0][1],
+                                     'satellite_img1': np.float64(master_split[0][2:4]),
+                                     'correction_level_img1': master_split[1],
+                                     'path_img1': np.float64(master_split[2][0:3]),
+                                     'row_img1': np.float64(master_split[2][3:6]),
+                                     'acquisition_date_img1': master_dt.strftime('%Y%m%dT%H:%M:%S'),
+                                     'time_standard_img1': 'UTC',
+                                     'processing_date_img1': master_split[4][0:8],
+                                     'collection_number_img1': np.float64(master_split[5]),
+                                     'collection_category_img1': master_split[6],
+                                     'mission_img2': slave_split[0][0],
+                                     'sensor_img2': slave_split[0][1],
+                                     'satellite_img2': np.float64(slave_split[0][2:4]),
+                                     'correction_level_img2': slave_split[1],
+                                     'path_img2': np.float64(slave_split[2][0:3]),
+                                     'row_img2': np.float64(slave_split[2][3:6]),
+                                     'acquisition_date_img2': slave_dt.strftime('%Y%m%dT%H:%M:%S'),
+                                     'time_standard_img2': 'UTC',
+                                     'processing_date_img2': slave_split[4][0:8],
+                                     'collection_number_img2': np.float64(slave_split[5]),
+                                     'collection_category_img2': slave_split[6], 'date_dt': date_dt,
+                                     'date_center': date_center, 'latitude': cen_lat, 'longitude': cen_lon,
+                                     'roi_valid_percentage': PPP, 'autoRIFT_software_version': version}

                     error_vector = np.array([25.5,25.5])

